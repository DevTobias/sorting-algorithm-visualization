{"version":3,"sources":["utils/reportWebVitals.js","components/settings/settingsSlice.js","components/navigation/Navbar.component.js","components/settings/Settings.component.js","components/visualizer/Visualizer.component.js","components/App.js","app/store.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","slice","createSlice","name","initialState","show","reducers","close","state","toggle","actions","selectShow","settings","NavBarInstance","onSelect","activeKey","props","dispatch","useDispatch","Navbar","style","Header","padding","margin","display","className","href","src","process","width","height","Body","appearance","Item","eventKey","icon","Icon","Nav","pullRight","MainNavbar","handleSelect","bind","this","setState","Component","Settings","useSelector","Drawer","onHide","placement","size","Title","Footer","Button","onClick","SortingVisualizer","App","configureStore","reducer","settingsReducer","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.ab9a8f47.chunk.js","sourcesContent":["const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {createSlice} from '@reduxjs/toolkit';\n\nexport const slice = createSlice({\n  name: 'settings',\n  initialState: {\n    show: false,\n  },\n  reducers: {\n    close: (state) => {\n      state.show = false;\n    },\n    toggle: (state) => {\n      state.show = true;\n    },\n  },\n});\n\nexport const {close, toggle} = slice.actions;\nexport const selectShow = (state) => state.settings.show;\n\nexport default slice.reducer;\n","/* eslint-disable react/prop-types */\n/* eslint-disable require-jsdoc */\nimport React, {Component} from 'react';\n\nimport {Navbar, Nav, Icon} from 'rsuite';\nimport ResponsiveNav from '@rsuite/responsive-nav';\n\nimport {useDispatch} from 'react-redux';\nimport {toggle} from '../settings/settingsSlice';\n\nimport './Navbar.css';\n\n\nconst NavBarInstance = ({onSelect, activeKey, ...props}) => {\n  const dispatch = useDispatch();\n  const headerStyle = {\n    padding: '15px 20px',\n    margin: 0,\n    display: 'inline-block',\n  };\n  const navStyle = {\n    'box-shadow': '0px 3px 5px 0px rgba(15,19,26,0.5)',\n    'background-color': '#0F131A',\n  };\n\n  return (\n    <Navbar {...props} style={navStyle}>\n      <Navbar.Header style={headerStyle} className=\"navbar-brand logo\">\n        <a href=\"\">\n          <img\n            src={process.env.PUBLIC_URL + '/logo.svg'}\n            width=\"30\" height=\"30\"\n            className=\"d-inline-block align-top\"\n          />{' '}\n        </a>\n      </Navbar.Header>\n      <Navbar.Body>\n        <ResponsiveNav appearance=\"subtle\" onSelect={onSelect}\n          activeKey={activeKey}>\n          <ResponsiveNav.Item eventKey=\"1\" icon={<Icon icon=\"home\" />}>\n            Home\n          </ResponsiveNav.Item>\n          <ResponsiveNav.Item icon={<Icon icon=\"sort\" />} eventKey=\"2\">\n            Sortierung\n          </ResponsiveNav.Item>\n          <ResponsiveNav.Item icon={<Icon icon=\"search\" />} eventKey=\"3\">\n            Wegfindung\n          </ResponsiveNav.Item>\n          <ResponsiveNav.Item icon={<Icon icon=\"table\" />} eventKey=\"4\">\n            Markov\n          </ResponsiveNav.Item>\n          <ResponsiveNav.Item icon={<Icon icon=\"microchip\" />} eventKey=\"5\">\n            Registermaschine\n          </ResponsiveNav.Item>\n        </ResponsiveNav>\n        <Nav pullRight onSelect={() => dispatch(toggle())}>\n          <Nav.Item icon={<Icon icon=\"cog\" />}></Nav.Item>\n        </Nav>\n      </Navbar.Body>\n    </Navbar>\n  );\n};\n\nexport default class MainNavbar extends Component {\n  constructor() {\n    super();\n    this.handleSelect = this.handleSelect.bind(this);\n    this.state = {\n      activeKey: '1',\n    };\n  }\n\n  handleSelect(eventKey) {\n    this.setState({\n      activeKey: eventKey,\n    });\n  }\n\n  render() {\n    const {activeKey} = this.state;\n    return (\n      <div className=\"nav-wrapper av-background\">\n        <NavBarInstance appearance=\"subtle\" activeKey={activeKey}\n          onSelect={this.handleSelect} />\n      </div>\n    );\n  }\n}\n","/* eslint-disable require-jsdoc */\n\nimport React from 'react';\nimport {Button, Drawer} from 'rsuite';\n\nimport {useSelector, useDispatch} from 'react-redux';\nimport {close, selectShow} from './settingsSlice';\n\nimport './Settings.module.css';\n\nexport default function Settings() {\n  const dispatch = useDispatch();\n  const show = useSelector(selectShow);\n  return (\n    <div>\n      <Drawer show={show} onHide={() => dispatch(close())}\n        placement={'left'} size={'xs'}>\n        <Drawer.Header>\n          <Drawer.Title>Einstellungen</Drawer.Title>\n        </Drawer.Header>\n\n        <Drawer.Body>\n        </Drawer.Body>\n\n        <Drawer.Footer>\n          <Button onClick={() => dispatch(close())} appearance=\"subtle\"\n            style={{'margin': '15px 0px'}}>\n            Fertig\n          </Button>\n        </Drawer.Footer>\n      </Drawer>\n    </div>\n  );\n}\n","/* eslint-disable require-jsdoc */\n\nimport React, {Component} from 'react';\n\nimport Settings from '../settings/Settings.component';\n\nimport './Visualizer.css';\n\nexport default class SortingVisualizer extends Component {\n  render() {\n    return (\n      <main className=\"App\">\n        <Settings />\n        <header className=\"App-header\">\n          <p>Sorting Algorithm Visualization</p>\n        </header>\n      </main>\n    );\n  }\n}\n","/* eslint-disable require-jsdoc */\nimport React from 'react';\n\nimport './App.css';\n\nimport MainNavbar from './navigation/Navbar.component';\nimport SortingVisualizer\n  from './visualizer/Visualizer.component';\n\nfunction App() {\n  return (\n    <div>\n      <MainNavbar />\n      <SortingVisualizer />\n    </div>\n  );\n}\n\nexport default App;\n","import {configureStore} from '@reduxjs/toolkit';\nimport settingsReducer from '../components/settings/settingsSlice';\n\nexport default configureStore({\n  reducer: {\n    settings: settingsReducer,\n  },\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './utils/reportWebVitals';\n\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\nimport 'rsuite/dist/styles/rsuite-dark.css';\n\nimport './index.css';\n\nimport App from './components/App';\n\nimport store from './app/store';\nimport {Provider} from 'react-redux';\n\nReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById('root'),\n);\n\nreportWebVitals();\n"],"sourceRoot":""}